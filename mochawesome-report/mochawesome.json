{
  "stats": {
    "suites": 1,
    "tests": 15,
    "passes": 6,
    "pending": 0,
    "failures": 9,
    "start": "2023-05-18T09:18:39.792Z",
    "end": "2023-05-18T09:19:00.403Z",
    "duration": 20611,
    "testsRegistered": 15,
    "passPercent": 40,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ea397e5e-56ba-4c1a-af61-cbd279e105fe",
      "title": "",
      "fullFile": "/Users/leela/Desktop/botium_trial_four/spec/botium.spec.js",
      "file": "/spec/botium.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "33e49682-65a4-4cd1-ae53-e559572c5996",
          "title": "Dialogflow Sample",
          "fullFile": "/Users/leela/Desktop/botium_trial_four/spec/botium.spec.js",
          "file": "/spec/botium.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Dialogflow Sample\"",
              "fullTitle": "Dialogflow Sample \"before all\" hook in \"Dialogflow Sample\"",
              "timedOut": false,
              "duration": 1233,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(timeout)\nbb.beforeAll().then(() => done()).catch(done)",
              "err": {},
              "uuid": "76730418-4765-4704-aaf7-4f88c73ae6d1",
              "parentUUID": "33e49682-65a4-4cd1-ae53-e559572c5996",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Dialogflow Sample\"",
              "fullTitle": "Dialogflow Sample \"before each\" hook in \"Dialogflow Sample\"",
              "timedOut": false,
              "duration": 23,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(timeout)\nbb.beforeEach().then(() => done()).catch(done)",
              "err": {},
              "uuid": "be3bdcd0-e3e9-4aec-822e-3effda24f7bc",
              "parentUUID": "33e49682-65a4-4cd1-ae53-e559572c5996",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Dialogflow Sample\"",
              "fullTitle": "Dialogflow Sample \"after all\" hook in \"Dialogflow Sample\"",
              "timedOut": false,
              "duration": 4,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(timeout)\nbb.afterAll().then(() => done()).catch(done)",
              "err": {},
              "uuid": "a370c14c-54f8-4e7c-b631-ad5420c12974",
              "parentUUID": "33e49682-65a4-4cd1-ae53-e559572c5996",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Dialogflow Sample\"",
              "fullTitle": "Dialogflow Sample \"after each\" hook in \"Dialogflow Sample\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(timeout)\nbb.afterEach().then(() => done()).catch(done)",
              "err": {},
              "uuid": "70e2dbc0-61cb-4826-885b-6e1f1bfae263",
              "parentUUID": "33e49682-65a4-4cd1-ae53-e559572c5996",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "HELLO_Convo_1",
              "fullTitle": "Dialogflow Sample HELLO_Convo_1",
              "timedOut": false,
              "duration": 898,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (this.container) {\n  debug(`running testcase${convo.header.toString()}`)\n  convo.Run(this.container)\n    .then(() => {\n      debug(`Test Case \"${convo.header.name}\" ready, calling done function.`)\n      testcaseDone()\n    })\n    .catch((err) => {\n      debug(`Test Case \"${convo.header.name}\" failed: ${util.inspect(err)}`)\n      testcaseDone(this.wrapBotiumError(err))\n    })\n} else {\n  testcaseDone(new Error('Botium Initialization failed. Please see error messages above (enable debug logging).'))\n}",
              "err": {
                "message": "Error: HELLO_Convo_1/Line 6: Bot response (on Line 3: #me - hello) \"Greetings! How can I assist?\" expected to match \"Hi! How are you doing?\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"Hi! How are you doing?\"]  - Actual: \"Greetings! How can I assist?\"\r\nINPUT: hello\r\n------------ TRANSCRIPT ----------------------------\r\n#me: hello\r\n#bot: Greetings! How can I assist?",
                "estack": "Error: HELLO_Convo_1/Line 6: Bot response (on Line 3: #me - hello) \"Greetings! How can I assist?\" expected to match \"Hi! How are you doing?\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"Hi! How are you doing?\"]  - Actual: \"Greetings! How can I assist?\"\r\nINPUT: hello\r\n------------ TRANSCRIPT ----------------------------\r\n#me: hello\r\n#bot: Greetings! How can I assist?\n    at BotiumBindings.wrapBotiumError (node_modules/botium-bindings/src/BotiumBindings.js:77:14)\n    at /Users/leela/Desktop/botium_trial_four/node_modules/botium-bindings/src/BotiumBindings.js:134:33",
                "diff": null
              },
              "uuid": "62b2b83c-8b61-48b4-a54f-481341862fec",
              "parentUUID": "33e49682-65a4-4cd1-ae53-e559572c5996",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HELP_Convo_2",
              "fullTitle": "Dialogflow Sample HELP_Convo_2",
              "timedOut": false,
              "duration": 842,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (this.container) {\n  debug(`running testcase${convo.header.toString()}`)\n  convo.Run(this.container)\n    .then(() => {\n      debug(`Test Case \"${convo.header.name}\" ready, calling done function.`)\n      testcaseDone()\n    })\n    .catch((err) => {\n      debug(`Test Case \"${convo.header.name}\" failed: ${util.inspect(err)}`)\n      testcaseDone(this.wrapBotiumError(err))\n    })\n} else {\n  testcaseDone(new Error('Botium Initialization failed. Please see error messages above (enable debug logging).'))\n}",
              "err": {
                "message": "Error: HELP_Convo_2/Line 6: Bot response (on Line 3: #me - help) \"I didn't get that. Can you repeat?\" expected to match \"Say that one more time?\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"Say that one more time?\"]  - Actual: \"I didn't get that. Can you repeat?\"\r\nINPUT: help\r\n------------ TRANSCRIPT ----------------------------\r\n#me: help\r\n#bot: I didn't get that. Can you repeat?",
                "estack": "Error: HELP_Convo_2/Line 6: Bot response (on Line 3: #me - help) \"I didn't get that. Can you repeat?\" expected to match \"Say that one more time?\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"Say that one more time?\"]  - Actual: \"I didn't get that. Can you repeat?\"\r\nINPUT: help\r\n------------ TRANSCRIPT ----------------------------\r\n#me: help\r\n#bot: I didn't get that. Can you repeat?\n    at BotiumBindings.wrapBotiumError (node_modules/botium-bindings/src/BotiumBindings.js:77:14)\n    at /Users/leela/Desktop/botium_trial_four/node_modules/botium-bindings/src/BotiumBindings.js:134:33",
                "diff": null
              },
              "uuid": "7d7c4d1a-5008-460e-8e0e-e6a2e3ace267",
              "parentUUID": "33e49682-65a4-4cd1-ae53-e559572c5996",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HELP_Convo_3",
              "fullTitle": "Dialogflow Sample HELP_Convo_3",
              "timedOut": false,
              "duration": 892,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (this.container) {\n  debug(`running testcase${convo.header.toString()}`)\n  convo.Run(this.container)\n    .then(() => {\n      debug(`Test Case \"${convo.header.name}\" ready, calling done function.`)\n      testcaseDone()\n    })\n    .catch((err) => {\n      debug(`Test Case \"${convo.header.name}\" failed: ${util.inspect(err)}`)\n      testcaseDone(this.wrapBotiumError(err))\n    })\n} else {\n  testcaseDone(new Error('Botium Initialization failed. Please see error messages above (enable debug logging).'))\n}",
              "err": {
                "message": "Error: HELP_Convo_3/Line 6: Bot response (on Line 3: #me - help) \"Sorry, what was that?\" expected to match \"One more time?\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"One more time?\"]  - Actual: \"Sorry, what was that?\"\r\nINPUT: help\r\n------------ TRANSCRIPT ----------------------------\r\n#me: help\r\n#bot: Sorry, what was that?",
                "estack": "Error: HELP_Convo_3/Line 6: Bot response (on Line 3: #me - help) \"Sorry, what was that?\" expected to match \"One more time?\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"One more time?\"]  - Actual: \"Sorry, what was that?\"\r\nINPUT: help\r\n------------ TRANSCRIPT ----------------------------\r\n#me: help\r\n#bot: Sorry, what was that?\n    at BotiumBindings.wrapBotiumError (node_modules/botium-bindings/src/BotiumBindings.js:77:14)\n    at /Users/leela/Desktop/botium_trial_four/node_modules/botium-bindings/src/BotiumBindings.js:134:33",
                "diff": null
              },
              "uuid": "cbc60708-18e0-411c-ae41-417b106b5e18",
              "parentUUID": "33e49682-65a4-4cd1-ae53-e559572c5996",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HELP_Convo_4",
              "fullTitle": "Dialogflow Sample HELP_Convo_4",
              "timedOut": false,
              "duration": 708,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (this.container) {\n  debug(`running testcase${convo.header.toString()}`)\n  convo.Run(this.container)\n    .then(() => {\n      debug(`Test Case \"${convo.header.name}\" ready, calling done function.`)\n      testcaseDone()\n    })\n    .catch((err) => {\n      debug(`Test Case \"${convo.header.name}\" failed: ${util.inspect(err)}`)\n      testcaseDone(this.wrapBotiumError(err))\n    })\n} else {\n  testcaseDone(new Error('Botium Initialization failed. Please see error messages above (enable debug logging).'))\n}",
              "err": {
                "message": "Error: HELP_Convo_4/Line 6: Bot response (on Line 3: #me - help) \"Sorry, can you say that again?\" expected to match \"I missed what you said. What was that?\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"I missed what you said. What was that?\"]  - Actual: \"Sorry, can you say that again?\"\r\nINPUT: help\r\n------------ TRANSCRIPT ----------------------------\r\n#me: help\r\n#bot: Sorry, can you say that again?",
                "estack": "Error: HELP_Convo_4/Line 6: Bot response (on Line 3: #me - help) \"Sorry, can you say that again?\" expected to match \"I missed what you said. What was that?\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"I missed what you said. What was that?\"]  - Actual: \"Sorry, can you say that again?\"\r\nINPUT: help\r\n------------ TRANSCRIPT ----------------------------\r\n#me: help\r\n#bot: Sorry, can you say that again?\n    at BotiumBindings.wrapBotiumError (node_modules/botium-bindings/src/BotiumBindings.js:77:14)\n    at /Users/leela/Desktop/botium_trial_four/node_modules/botium-bindings/src/BotiumBindings.js:134:33",
                "diff": null
              },
              "uuid": "2a24a052-93d5-471a-bd4d-5b1ceb7f2307",
              "parentUUID": "33e49682-65a4-4cd1-ae53-e559572c5996",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HELP_Convo_5",
              "fullTitle": "Dialogflow Sample HELP_Convo_5",
              "timedOut": false,
              "duration": 1511,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (this.container) {\n  debug(`running testcase${convo.header.toString()}`)\n  convo.Run(this.container)\n    .then(() => {\n      debug(`Test Case \"${convo.header.name}\" ready, calling done function.`)\n      testcaseDone()\n    })\n    .catch((err) => {\n      debug(`Test Case \"${convo.header.name}\" failed: ${util.inspect(err)}`)\n      testcaseDone(this.wrapBotiumError(err))\n    })\n} else {\n  testcaseDone(new Error('Botium Initialization failed. Please see error messages above (enable debug logging).'))\n}",
              "err": {
                "message": "Error: HELP_Convo_5/Line 12: Bot response (on Line 9: #me - can I get coffee?) \"Its a perfect day for a cup of coffee!\" expected to match \"Yes, we have coffee!\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"Yes, we have coffee!\"]  - Actual: \"Its a perfect day for a cup of coffee!\"\r\nINPUT: can I get coffee?\r\n------------ TRANSCRIPT ----------------------------\r\n#me: help\r\n#bot: Sorry, can you say that again?\r\n#me: can I get coffee?\r\n#bot: Its a perfect day for a cup of coffee!",
                "estack": "Error: HELP_Convo_5/Line 12: Bot response (on Line 9: #me - can I get coffee?) \"Its a perfect day for a cup of coffee!\" expected to match \"Yes, we have coffee!\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"Yes, we have coffee!\"]  - Actual: \"Its a perfect day for a cup of coffee!\"\r\nINPUT: can I get coffee?\r\n------------ TRANSCRIPT ----------------------------\r\n#me: help\r\n#bot: Sorry, can you say that again?\r\n#me: can I get coffee?\r\n#bot: Its a perfect day for a cup of coffee!\n    at BotiumBindings.wrapBotiumError (node_modules/botium-bindings/src/BotiumBindings.js:77:14)\n    at /Users/leela/Desktop/botium_trial_four/node_modules/botium-bindings/src/BotiumBindings.js:134:33",
                "diff": null
              },
              "uuid": "db9d7d4b-f215-4d28-aa81-434590947175",
              "parentUUID": "33e49682-65a4-4cd1-ae53-e559572c5996",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HELP_Convo_6",
              "fullTitle": "Dialogflow Sample HELP_Convo_6",
              "timedOut": false,
              "duration": 739,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (this.container) {\n  debug(`running testcase${convo.header.toString()}`)\n  convo.Run(this.container)\n    .then(() => {\n      debug(`Test Case \"${convo.header.name}\" ready, calling done function.`)\n      testcaseDone()\n    })\n    .catch((err) => {\n      debug(`Test Case \"${convo.header.name}\" failed: ${util.inspect(err)}`)\n      testcaseDone(this.wrapBotiumError(err))\n    })\n} else {\n  testcaseDone(new Error('Botium Initialization failed. Please see error messages above (enable debug logging).'))\n}",
              "err": {
                "message": "Error: HELP_Convo_6/Line 6: Bot response (on Line 3: #me - help) \"What was that?\" expected to match \"I missed what you said. What was that?\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"I missed what you said. What was that?\"]  - Actual: \"What was that?\"\r\nINPUT: help\r\n------------ TRANSCRIPT ----------------------------\r\n#me: help\r\n#bot: What was that?",
                "estack": "Error: HELP_Convo_6/Line 6: Bot response (on Line 3: #me - help) \"What was that?\" expected to match \"I missed what you said. What was that?\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"I missed what you said. What was that?\"]  - Actual: \"What was that?\"\r\nINPUT: help\r\n------------ TRANSCRIPT ----------------------------\r\n#me: help\r\n#bot: What was that?\n    at BotiumBindings.wrapBotiumError (node_modules/botium-bindings/src/BotiumBindings.js:77:14)\n    at /Users/leela/Desktop/botium_trial_four/node_modules/botium-bindings/src/BotiumBindings.js:134:33",
                "diff": null
              },
              "uuid": "86537900-82c2-47bc-b69a-e881b18a24f5",
              "parentUUID": "33e49682-65a4-4cd1-ae53-e559572c5996",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "bot_convo",
              "fullTitle": "Dialogflow Sample bot_convo",
              "timedOut": false,
              "duration": 828,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (this.container) {\n  debug(`running testcase${convo.header.toString()}`)\n  convo.Run(this.container)\n    .then(() => {\n      debug(`Test Case \"${convo.header.name}\" ready, calling done function.`)\n      testcaseDone()\n    })\n    .catch((err) => {\n      debug(`Test Case \"${convo.header.name}\" failed: ${util.inspect(err)}`)\n      testcaseDone(this.wrapBotiumError(err))\n    })\n} else {\n  testcaseDone(new Error('Botium Initialization failed. Please see error messages above (enable debug logging).'))\n}",
              "err": {},
              "uuid": "fa4cf3c1-e79d-4a60-8cab-68851e0172d7",
              "parentUUID": "33e49682-65a4-4cd1-ae53-e559572c5996",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "coffee_order_basic/HELLO_UTT-L1",
              "fullTitle": "Dialogflow Sample coffee_order_basic/HELLO_UTT-L1",
              "timedOut": false,
              "duration": 2214,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (this.container) {\n  debug(`running testcase${convo.header.toString()}`)\n  convo.Run(this.container)\n    .then(() => {\n      debug(`Test Case \"${convo.header.name}\" ready, calling done function.`)\n      testcaseDone()\n    })\n    .catch((err) => {\n      debug(`Test Case \"${convo.header.name}\" failed: ${util.inspect(err)}`)\n      testcaseDone(this.wrapBotiumError(err))\n    })\n} else {\n  testcaseDone(new Error('Botium Initialization failed. Please see error messages above (enable debug logging).'))\n}",
              "err": {},
              "uuid": "a3bb6099-de01-4278-8e97-d86cbb82fb1b",
              "parentUUID": "33e49682-65a4-4cd1-ae53-e559572c5996",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "coffee_order_basic/HELLO_UTT-L2",
              "fullTitle": "Dialogflow Sample coffee_order_basic/HELLO_UTT-L2",
              "timedOut": false,
              "duration": 2197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (this.container) {\n  debug(`running testcase${convo.header.toString()}`)\n  convo.Run(this.container)\n    .then(() => {\n      debug(`Test Case \"${convo.header.name}\" ready, calling done function.`)\n      testcaseDone()\n    })\n    .catch((err) => {\n      debug(`Test Case \"${convo.header.name}\" failed: ${util.inspect(err)}`)\n      testcaseDone(this.wrapBotiumError(err))\n    })\n} else {\n  testcaseDone(new Error('Botium Initialization failed. Please see error messages above (enable debug logging).'))\n}",
              "err": {},
              "uuid": "6b1ffa47-7155-46a9-8476-61440f5e80ee",
              "parentUUID": "33e49682-65a4-4cd1-ae53-e559572c5996",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "coffee_order_basic/HELLO_UTT-L3",
              "fullTitle": "Dialogflow Sample coffee_order_basic/HELLO_UTT-L3",
              "timedOut": false,
              "duration": 1806,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (this.container) {\n  debug(`running testcase${convo.header.toString()}`)\n  convo.Run(this.container)\n    .then(() => {\n      debug(`Test Case \"${convo.header.name}\" ready, calling done function.`)\n      testcaseDone()\n    })\n    .catch((err) => {\n      debug(`Test Case \"${convo.header.name}\" failed: ${util.inspect(err)}`)\n      testcaseDone(this.wrapBotiumError(err))\n    })\n} else {\n  testcaseDone(new Error('Botium Initialization failed. Please see error messages above (enable debug logging).'))\n}",
              "err": {},
              "uuid": "d760f310-6482-4ca9-ae09-4be48e81790d",
              "parentUUID": "33e49682-65a4-4cd1-ae53-e559572c5996",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "coffee_order_basic/HELLO_UTT-L4",
              "fullTitle": "Dialogflow Sample coffee_order_basic/HELLO_UTT-L4",
              "timedOut": false,
              "duration": 2093,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (this.container) {\n  debug(`running testcase${convo.header.toString()}`)\n  convo.Run(this.container)\n    .then(() => {\n      debug(`Test Case \"${convo.header.name}\" ready, calling done function.`)\n      testcaseDone()\n    })\n    .catch((err) => {\n      debug(`Test Case \"${convo.header.name}\" failed: ${util.inspect(err)}`)\n      testcaseDone(this.wrapBotiumError(err))\n    })\n} else {\n  testcaseDone(new Error('Botium Initialization failed. Please see error messages above (enable debug logging).'))\n}",
              "err": {},
              "uuid": "053f3641-8ebd-46c2-9d28-cedbf9868792",
              "parentUUID": "33e49682-65a4-4cd1-ae53-e559572c5996",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "coffee_order_basic/HELLO_UTT-L5",
              "fullTitle": "Dialogflow Sample coffee_order_basic/HELLO_UTT-L5",
              "timedOut": false,
              "duration": 2034,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (this.container) {\n  debug(`running testcase${convo.header.toString()}`)\n  convo.Run(this.container)\n    .then(() => {\n      debug(`Test Case \"${convo.header.name}\" ready, calling done function.`)\n      testcaseDone()\n    })\n    .catch((err) => {\n      debug(`Test Case \"${convo.header.name}\" failed: ${util.inspect(err)}`)\n      testcaseDone(this.wrapBotiumError(err))\n    })\n} else {\n  testcaseDone(new Error('Botium Initialization failed. Please see error messages above (enable debug logging).'))\n}",
              "err": {},
              "uuid": "b2625468-a44d-4943-9ca4-a0205f95113e",
              "parentUUID": "33e49682-65a4-4cd1-ae53-e559572c5996",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "coffee_order_basic/HELLO_UTT-L6",
              "fullTitle": "Dialogflow Sample coffee_order_basic/HELLO_UTT-L6",
              "timedOut": false,
              "duration": 708,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (this.container) {\n  debug(`running testcase${convo.header.toString()}`)\n  convo.Run(this.container)\n    .then(() => {\n      debug(`Test Case \"${convo.header.name}\" ready, calling done function.`)\n      testcaseDone()\n    })\n    .catch((err) => {\n      debug(`Test Case \"${convo.header.name}\" failed: ${util.inspect(err)}`)\n      testcaseDone(this.wrapBotiumError(err))\n    })\n} else {\n  testcaseDone(new Error('Botium Initialization failed. Please see error messages above (enable debug logging).'))\n}",
              "err": {
                "message": "Error: coffee_order_basic/HELLO_UTT-L6/Line 6: Bot response (on Line 3: #me - anyone at home ?) \"Can you say that again?\" expected to match one of \"Hi! How are you doing?\", \"Hello! How can I help you?\", \"Good day! What can I do for you today?\", \"Greetings! How can I assist?\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"Hi! How are you doing?\",\"Hello! How can I help you?\",\"Good day! What can I do for you today?\",\"Greetings! How can I assist?\"]  - Actual: \"Can you say that again?\"\r\nINPUT: anyone at home ?\r\n------------ TRANSCRIPT ----------------------------\r\n#me: anyone at home ?\r\n#bot: Can you say that again?",
                "estack": "Error: coffee_order_basic/HELLO_UTT-L6/Line 6: Bot response (on Line 3: #me - anyone at home ?) \"Can you say that again?\" expected to match one of \"Hi! How are you doing?\", \"Hello! How can I help you?\", \"Good day! What can I do for you today?\", \"Greetings! How can I assist?\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"Hi! How are you doing?\",\"Hello! How can I help you?\",\"Good day! What can I do for you today?\",\"Greetings! How can I assist?\"]  - Actual: \"Can you say that again?\"\r\nINPUT: anyone at home ?\r\n------------ TRANSCRIPT ----------------------------\r\n#me: anyone at home ?\r\n#bot: Can you say that again?\n    at BotiumBindings.wrapBotiumError (node_modules/botium-bindings/src/BotiumBindings.js:77:14)\n    at /Users/leela/Desktop/botium_trial_four/node_modules/botium-bindings/src/BotiumBindings.js:134:33",
                "diff": null
              },
              "uuid": "91a1ee99-42cd-4e70-a140-430571149a62",
              "parentUUID": "33e49682-65a4-4cd1-ae53-e559572c5996",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "coffee_order_convo",
              "fullTitle": "Dialogflow Sample coffee_order_convo",
              "timedOut": false,
              "duration": 769,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (this.container) {\n  debug(`running testcase${convo.header.toString()}`)\n  convo.Run(this.container)\n    .then(() => {\n      debug(`Test Case \"${convo.header.name}\" ready, calling done function.`)\n      testcaseDone()\n    })\n    .catch((err) => {\n      debug(`Test Case \"${convo.header.name}\" failed: ${util.inspect(err)}`)\n      testcaseDone(this.wrapBotiumError(err))\n    })\n} else {\n  testcaseDone(new Error('Botium Initialization failed. Please see error messages above (enable debug logging).'))\n}",
              "err": {
                "message": "Error: coffee_order_convo/Line 6: Bot response (on Line 3: #me - cup) \"Yes, we have coffee!\" expected to match \"Its a perfect day for a cup of coffee!\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"Its a perfect day for a cup of coffee!\"]  - Actual: \"Yes, we have coffee!\"\r\nINPUT: cup\r\n------------ TRANSCRIPT ----------------------------\r\n#me: cup\r\n#bot: Yes, we have coffee!",
                "estack": "Error: coffee_order_convo/Line 6: Bot response (on Line 3: #me - cup) \"Yes, we have coffee!\" expected to match \"Its a perfect day for a cup of coffee!\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"Its a perfect day for a cup of coffee!\"]  - Actual: \"Yes, we have coffee!\"\r\nINPUT: cup\r\n------------ TRANSCRIPT ----------------------------\r\n#me: cup\r\n#bot: Yes, we have coffee!\n    at BotiumBindings.wrapBotiumError (node_modules/botium-bindings/src/BotiumBindings.js:77:14)\n    at /Users/leela/Desktop/botium_trial_four/node_modules/botium-bindings/src/BotiumBindings.js:134:33",
                "diff": null
              },
              "uuid": "974dd069-574b-4622-a9d2-670e1c7f8887",
              "parentUUID": "33e49682-65a4-4cd1-ae53-e559572c5996",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "give me picture",
              "fullTitle": "Dialogflow Sample give me picture",
              "timedOut": false,
              "duration": 732,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (this.container) {\n  debug(`running testcase${convo.header.toString()}`)\n  convo.Run(this.container)\n    .then(() => {\n      debug(`Test Case \"${convo.header.name}\" ready, calling done function.`)\n      testcaseDone()\n    })\n    .catch((err) => {\n      debug(`Test Case \"${convo.header.name}\" failed: ${util.inspect(err)}`)\n      testcaseDone(this.wrapBotiumError(err))\n    })\n} else {\n  testcaseDone(new Error('Botium Initialization failed. Please see error messages above (enable debug logging).'))\n}",
              "err": {
                "message": "Error: give me picture/Line 6: Bot response (on Line 3: #me - Hello, Bot!) \"Good day! What can I do for you today?\" expected to match \"You said: Hello, Bot!\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"You said: Hello, Bot!\"]  - Actual: \"Good day! What can I do for you today?\"\r\nINPUT: Hello, Bot!\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Hello, Bot!\r\n#bot: Good day! What can I do for you today?",
                "estack": "Error: give me picture/Line 6: Bot response (on Line 3: #me - Hello, Bot!) \"Good day! What can I do for you today?\" expected to match \"You said: Hello, Bot!\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"You said: Hello, Bot!\"]  - Actual: \"Good day! What can I do for you today?\"\r\nINPUT: Hello, Bot!\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Hello, Bot!\r\n#bot: Good day! What can I do for you today?\n    at BotiumBindings.wrapBotiumError (node_modules/botium-bindings/src/BotiumBindings.js:77:14)\n    at /Users/leela/Desktop/botium_trial_four/node_modules/botium-bindings/src/BotiumBindings.js:134:33",
                "diff": null
              },
              "uuid": "a96f5103-6ad7-471e-a537-eae144be95aa",
              "parentUUID": "33e49682-65a4-4cd1-ae53-e559572c5996",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fa4cf3c1-e79d-4a60-8cab-68851e0172d7",
            "a3bb6099-de01-4278-8e97-d86cbb82fb1b",
            "6b1ffa47-7155-46a9-8476-61440f5e80ee",
            "d760f310-6482-4ca9-ae09-4be48e81790d",
            "053f3641-8ebd-46c2-9d28-cedbf9868792",
            "b2625468-a44d-4943-9ca4-a0205f95113e"
          ],
          "failures": [
            "62b2b83c-8b61-48b4-a54f-481341862fec",
            "7d7c4d1a-5008-460e-8e0e-e6a2e3ace267",
            "cbc60708-18e0-411c-ae41-417b106b5e18",
            "2a24a052-93d5-471a-bd4d-5b1ceb7f2307",
            "db9d7d4b-f215-4d28-aa81-434590947175",
            "86537900-82c2-47bc-b69a-e881b18a24f5",
            "91a1ee99-42cd-4e70-a140-430571149a62",
            "974dd069-574b-4622-a9d2-670e1c7f8887",
            "a96f5103-6ad7-471e-a537-eae144be95aa"
          ],
          "pending": [],
          "skipped": [],
          "duration": 18971,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}